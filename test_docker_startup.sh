#!/bin/bash

echo "üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞ Security Tools MCP Agent (Docker)"
echo "=================================================================="

# –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
start_time=$(date +%s)
echo "üìÖ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: $(date)"

# –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose down --remove-orphans --volumes 2>/dev/null || true

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker system prune -f 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É –∏ –∑–∞–ø—É—Å–∫ —Å –≤—ã–≤–æ–¥–æ–º –ª–æ–≥–æ–≤
echo "üî® –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ –∏ —Å—Ç–∞—Ä—Ç–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose up --build -d

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
check_service() {
    local service_name=$1
    local port=$2
    local max_attempts=60
    local attempt=1
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ $service_name –Ω–∞ –ø–æ—Ä—Ç—É $port..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s "http://localhost:$port" >/dev/null 2>&1; then
            echo "‚úÖ $service_name –≥–æ—Ç–æ–≤ (–ø–æ–ø—ã—Ç–∫–∞ $attempt)"
            return 0
        fi
        
        if [ $((attempt % 10)) -eq 0 ]; then
            echo "‚è≥ $service_name –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤ (–ø–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts)"
        fi
        
        sleep 2
        ((attempt++))
    done
    
    echo "‚ùå $service_name –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
services_ready=0

# –û—Å–Ω–æ–≤–Ω–æ–µ Gradio –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if check_service "gradio-app" "7860"; then
    ((services_ready++))
fi

# MCP —Å–µ—Ä–≤–∏—Å—ã
if check_service "mcp-bandit" "7861"; then
    ((services_ready++))
fi

if check_service "mcp-detect-secrets" "7862"; then
    ((services_ready++))
fi

if check_service "mcp-pip-audit" "7863"; then
    ((services_ready++))
fi

if check_service "mcp-circle-test" "7864"; then
    ((services_ready++))
fi

if check_service "mcp-semgrep" "7865"; then
    ((services_ready++))
fi

# –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
end_time=$(date +%s)
total_time=$((end_time - start_time))

echo ""
echo "=================================================================="
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "=================================================================="
echo "üìÖ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:    $(date -r $start_time)"
echo "üìÖ –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: $(date -r $end_time)"
echo "‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è:     ${total_time} —Å–µ–∫—É–Ω–¥ ($(($total_time / 60)) –º–∏–Ω $(($total_time % 60)) —Å–µ–∫)"
echo "‚úÖ –ì–æ—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: $services_ready/6"

if [ $services_ready -eq 6 ]; then
    echo "üéâ –í–°–ï –°–ï–†–í–ò–°–´ –ì–û–¢–û–í–´!"
    echo "üåê –ì—Ä–∞–¥–∏–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:7860"
    echo ""
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ MCP —Å–µ—Ä–≤–∏—Å—ã:"
    echo "   ‚Ä¢ Bandit:         http://localhost:7861"
    echo "   ‚Ä¢ Detect-Secrets: http://localhost:7862" 
    echo "   ‚Ä¢ Pip-Audit:      http://localhost:7863"
    echo "   ‚Ä¢ Circle-Test:    http://localhost:7864"
    echo "   ‚Ä¢ Semgrep:        http://localhost:7865"
else
    echo "‚ö†Ô∏è  –ù–ï –í–°–ï –°–ï–†–í–ò–°–´ –ì–û–¢–û–í–´"
    echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs"
fi

echo ""
echo "üê≥ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose ps

echo ""
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
docker stats --no-stream

echo ""
echo "üîß –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   –õ–æ–≥–∏:       docker compose logs -f"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  docker compose down"
echo "   –†–µ—Å—Ç–∞—Ä—Ç:    docker compose restart" 